#!/usr/bin/perl
# -------------------------------------------------
#	Kimengumi
#
# 	SCRIPT	: export-patch-svn-prod.pl
# 	AUTEUR	: Antonio ROSSETTI
# 	VERSION	: 0.2
# 	DATE	: 03/08/2009 
# -------------------------------------------------
use Cwd;

my ($svnbaserep,$rdeb,$rfin,$nomarchive)=@ARGV;

if($svnbaserep=~ m/help/ || (!$svnbaserep && !$rdeb && !$rfin && !$nomarchive)) {
print <<EOF;

export-patch-svn-prod.pl permet de génerer automatiquement un TAR contenant tous les fichiers 
de la working copy qui ont été modifiés entre 2 révsions choisies, en gardant l'arboressence.

utilisation :
export-patch-svn-prod.pl [rep base working copy] [rev départ] [rev fin] [nom du tar sans ext]

- tout les arguements sont optionnels, une liste des numéros de révisions est alors proposée.
- le TAR est déposé dans le répertoire courant.
- on peu entrer 'HEAD' comme révision de fin pour avoir la plus récente

!!! LES CHEMINS DOIVENT ETRE RENTRES EN ABSOLUS (pas de ./) !!!

EOF
	if($svnbaserep=~ m/help/) {
		exit(0);
	}
}

if(!$svnbaserep) {
	print 'répertoire de base de la working copy ? ';
	chomp($svnbaserep=<STDIN>);
} die() if(!$svnbaserep);

if(!($svnbaserep =~ m/\/$/)) { $svnbaserep.="/" }

if((!$rdeb)||(!$rfin)) {
	print "----- Liste des révisions ----\nVeuillez patienter ...";
	#exec('svn log '.$svnbaserep.' | grep "|"') or die();
	my @lstvers=`svn log -r1:HEAD $svnbaserep`;
	my $ligne;
	foreach $ligne (@lstvers) {
		chomp($ligne);
		if($ligne=~ m/^------/ || $ligne=~ m/^$/) {
			next();
		}elsif($ligne=~ m/\|/) {
			print "\n".$ligne.' | ';
		}#else{
		#	print "ERR ".$ligne."\n";
		#}
	}
	print "\n------------------------------\n";
}
if(!$rdeb) {
	print "révision de départ ? ";
	chomp($rdeb=<STDIN>);
} die() if(!$rdeb);

if(!$rfin) {
	print 'révision de fin (ou HEAD) ? ';
	chomp($rfin=<STDIN>);
} die() if(!$rfin);

if(!$nomarchive) {
        print 'nom de l\'archive à générer (sans extention) ? ';
        chomp($nomarchive=<STDIN>);
} die() if(!$nomarchive);

print "Récupération des infos svn ...\n";
my @lignes=`svn diff --summarize -r $rdeb:$rfin $svnbaserep  | sed "s\@$svnbaserep@@"`;
my $type;
my $fichier;
my @listefichiers;
my @listefichiersdelete;
foreach (@lignes) {
	if(($type,$fichier) = $_ =~ m/^\s*(\S+)\s+(\S+)$/) {
		if($type=~ m/D/) {
			push(@listefichiersdelete,$fichier);
		}elsif($type=~ m/A|M/) {
			if (!-d $svnbaserep.$fichier) {
				push(@listefichiers,$fichier);
			}
		}else{
			print "type inconnu: ".$type.' -> '.$fichier."\n";
		}
	}else{
		print "ligne rejetée: ".$_;
	}
}

die("Pas de fichiers modifiés trouvés !\n") if(!@listefichiers); 

#print "---- Liste des fichiers Ajoutés ou modifiés ----\n";
#foreach (@listefichiers) { print $_."\n"; }
if(@listefichiersdelete) {
	print "---- Liste des fichiers/répertoires supprimés durant cet interval de versions: ----\n";
	foreach (@listefichiersdelete) { print "rm ".$_."\n"; }
	print "-----------------------------\n";
}
print "Création de l'archive en cours ...";

my $outdir;
$outdir=getcwd();
die() if(!chdir($svnbaserep));

my @tarcmd;
push(@tarcmd,"tar");
push(@tarcmd,"-cf");
push(@tarcmd,$outdir.'/'.$nomarchive.'.tar');
push(@tarcmd,@listefichiers);
if(!system(@tarcmd)) {
	print "Fini OK !\narchive -> ".$outdir.'/'.$nomarchive.".tar\n";
}else{
	print "KO !!!\n\n";
	exit(1);
}
